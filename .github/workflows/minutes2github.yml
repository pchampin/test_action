name: Minutes 2 Github

env:
  URL_BASE: https://pchampin.github.io/test_action/
  M2G_TOKEN: ${{ github.token }}
  M2G_LOG_LEVEL: trace
  M2G_CHANNEL: pmwg
  M2G_GROUP: wg/pm        

on:
  push:
    branches:
      - main
    # paths: ## DEBUG: uncomment this when everything works
    #   - minutes/*.html

jobs:
  minutes_to_gh:
    runs-on: ubuntu-latest

    steps:
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Checkout minutes_to_gh
      uses: actions/checkout@v2
      with:
        repository: pchampin/minutes_to_gh
        path: ./m2g

    - name: Build minutes_to_gh
      working-directory: ./m2g
      run: cargo build --verbose

    - name: Checkout this repository
      uses: actions/checkout@v2
      with:
        path: ./repo
        fetch-depth: 0

    - name: Add list of new files to env
      working-directory: ./repo
      run: |
          NEW_FILES=$(
            git diff --name-status ${{ github.event.before }} ${{ github.event.after }} \
            | grep  '^A\s\+.*\.html$' \
            | sed 's!^A\s\+!!'
          )
          echo -e "NEW_FILES=\n" $NEW_FILES
          # echo "NEW_FILES=$NEW_FILES" >> $GITHUB_ENV
          # DEBUG: hack to force action on each act
          if [ "$NEW_FILES" = "" ]; then
            echo "NEW_FILES=minutes/minutes1.html" >> $GITHUB_ENV
          else
            echo "NEW_FILES=$NEW_FILES" >> $GITHUB_ENV
          fi

    - name: Run minutes_to_gh for each new file
      working-directory: ./m2g
      run: |
        if [ "$NEW_FILES" != "" ]; then
          for FILE in $NEW_FILES; do
            echo $FILE
            cargo run -- manual --repository pchampin/test_action --dry-run --file ../repo/$FILE --url $URL_BASE$FILE --transcript
          done
        fi
        
